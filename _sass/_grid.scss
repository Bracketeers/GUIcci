/* ============ Grid variables ============ */

$gutter: .5rem;

//Viewport & media queries
$grid-small: 480px;
$grid-medium: 769px;
$grid-large: 1025px;
$grid-widescreen: 1400px;

$small: 'mobile';
$small-down: 'small-down';
$small-up: 'small-up';
$medium: 'medium';
$medium-down: 'tablet';
$medium-up: 'desktop';
$large: 'large';
$large-down: 'large-down';
$large-up: 'large-up';
$widescreen: 'widescreen';

$breakpoints: (
  $small '(max-width: #{$grid-medium - 1})',
  $small-down '(max-width: #{$grid-small})',
  $small-up '(min-width: #{$grid-small + 1})',
  $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',
  $medium-down '(max-width: #{$grid-large - 1})',
  $medium-up '(min-width: #{$grid-medium})',
  $large '(min-width: #{$grid-large}) and (max-width: #{$grid-widescreen - 1})',
  $large-down '(max-width: #{$grid-widescreen - 1})',
  $large-up '(min-width: #{$grid-large})',
  $widescreen '(min-width: #{$grid-widescreen})'
);

/* ============ Grid system ============ */

.row {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  margin-bottom: -$gutter;
  margin-left: -$gutter;
  margin-right: -$gutter;
}

.column {
  display: block;
  flex-basis: 0;
  flex-grow: 1;
  flex-shrink: 1;
  padding: $gutter;
}

@mixin column-builder($breakpoint: '') {
  .#{$breakpoint}one-half { flex: none; width: 50%; }
  .#{$breakpoint}one-third { flex: none; width: 33.333%; }
  .#{$breakpoint}two-thirds { flex: none; width: 66.666%; }
  .#{$breakpoint}one-quarter { flex: none; width: 25%; }
  .#{$breakpoint}three-quarters { flex: none; width: 75%; }
  .#{$breakpoint}one-fifth { flex: none; width: 20%; }
  .#{$breakpoint}one-fifth { flex: none; width: 20%; }
  .#{$breakpoint}two-fifths { flex: none; width: 40%; }
  .#{$breakpoint}three-fifths { flex: none; width: 60%; }
  .#{$breakpoint}four-fifths { flex: none; width: 80%; }
  .#{$breakpoint}one-twentieth { flex: none; width: 5%; }
}

@include column-builder();

/* ============ Builders ============ */

@mixin media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }

  @if $breakpoint-found == false {
    @warn 'Breakpoint "#{$media-query}" does not exist';
  }
}

$breakpoint-has-widths: ($small, $medium-down, $medium-up);
@each $breakpoint in $breakpoint-has-widths {
  @include media-query($breakpoint) {
    @include column-builder('#{$breakpoint}--');
  }
}